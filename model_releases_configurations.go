/*
 * 阿波罗客户端
 *
 * 阿波罗客户端
 *
 * API version: v0.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReleasesConfigurations struct for ReleasesConfigurations
type ReleasesConfigurations struct {
	Timeout *string `json:"timeout,omitempty"`
}

// NewReleasesConfigurations instantiates a new ReleasesConfigurations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleasesConfigurations() *ReleasesConfigurations {
	this := ReleasesConfigurations{}
	return &this
}

// NewReleasesConfigurationsWithDefaults instantiates a new ReleasesConfigurations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleasesConfigurationsWithDefaults() *ReleasesConfigurations {
	this := ReleasesConfigurations{}
	return &this
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ReleasesConfigurations) GetTimeout() string {
	if o == nil || o.Timeout == nil {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleasesConfigurations) GetTimeoutOk() (*string, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ReleasesConfigurations) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *ReleasesConfigurations) SetTimeout(v string) {
	o.Timeout = &v
}

func (o ReleasesConfigurations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableReleasesConfigurations struct {
	value *ReleasesConfigurations
	isSet bool
}

func (v NullableReleasesConfigurations) Get() *ReleasesConfigurations {
	return v.value
}

func (v *NullableReleasesConfigurations) Set(val *ReleasesConfigurations) {
	v.value = val
	v.isSet = true
}

func (v NullableReleasesConfigurations) IsSet() bool {
	return v.isSet
}

func (v *NullableReleasesConfigurations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleasesConfigurations(val *ReleasesConfigurations) *NullableReleasesConfigurations {
	return &NullableReleasesConfigurations{value: val, isSet: true}
}

func (v NullableReleasesConfigurations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleasesConfigurations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
