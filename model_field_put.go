/*
 * 阿波罗客户端
 *
 * 阿波罗客户端
 *
 * API version: v0.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FieldPut struct for FieldPut
type FieldPut struct {
	Key                      *string `json:"key,omitempty"`
	Value                    *string `json:"value,omitempty"`
	Comment                  *string `json:"comment,omitempty"`
	DataChangeLastModifiedBy *string `json:"dataChangeLastModifiedBy,omitempty"`
	DataChangeCreatedBy      *string `json:"dataChangeCreatedBy,omitempty"`
}

// NewFieldPut instantiates a new FieldPut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFieldPut() *FieldPut {
	this := FieldPut{}
	return &this
}

// NewFieldPutWithDefaults instantiates a new FieldPut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFieldPutWithDefaults() *FieldPut {
	this := FieldPut{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *FieldPut) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldPut) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *FieldPut) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *FieldPut) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *FieldPut) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldPut) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *FieldPut) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *FieldPut) SetValue(v string) {
	o.Value = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *FieldPut) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldPut) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *FieldPut) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *FieldPut) SetComment(v string) {
	o.Comment = &v
}

// GetDataChangeLastModifiedBy returns the DataChangeLastModifiedBy field value if set, zero value otherwise.
func (o *FieldPut) GetDataChangeLastModifiedBy() string {
	if o == nil || o.DataChangeLastModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.DataChangeLastModifiedBy
}

// GetDataChangeLastModifiedByOk returns a tuple with the DataChangeLastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldPut) GetDataChangeLastModifiedByOk() (*string, bool) {
	if o == nil || o.DataChangeLastModifiedBy == nil {
		return nil, false
	}
	return o.DataChangeLastModifiedBy, true
}

// HasDataChangeLastModifiedBy returns a boolean if a field has been set.
func (o *FieldPut) HasDataChangeLastModifiedBy() bool {
	if o != nil && o.DataChangeLastModifiedBy != nil {
		return true
	}

	return false
}

// SetDataChangeLastModifiedBy gets a reference to the given string and assigns it to the DataChangeLastModifiedBy field.
func (o *FieldPut) SetDataChangeLastModifiedBy(v string) {
	o.DataChangeLastModifiedBy = &v
}

// GetDataChangeCreatedBy returns the DataChangeCreatedBy field value if set, zero value otherwise.
func (o *FieldPut) GetDataChangeCreatedBy() string {
	if o == nil || o.DataChangeCreatedBy == nil {
		var ret string
		return ret
	}
	return *o.DataChangeCreatedBy
}

// GetDataChangeCreatedByOk returns a tuple with the DataChangeCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FieldPut) GetDataChangeCreatedByOk() (*string, bool) {
	if o == nil || o.DataChangeCreatedBy == nil {
		return nil, false
	}
	return o.DataChangeCreatedBy, true
}

// HasDataChangeCreatedBy returns a boolean if a field has been set.
func (o *FieldPut) HasDataChangeCreatedBy() bool {
	if o != nil && o.DataChangeCreatedBy != nil {
		return true
	}

	return false
}

// SetDataChangeCreatedBy gets a reference to the given string and assigns it to the DataChangeCreatedBy field.
func (o *FieldPut) SetDataChangeCreatedBy(v string) {
	o.DataChangeCreatedBy = &v
}

func (o FieldPut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.DataChangeLastModifiedBy != nil {
		toSerialize["dataChangeLastModifiedBy"] = o.DataChangeLastModifiedBy
	}
	if o.DataChangeCreatedBy != nil {
		toSerialize["dataChangeCreatedBy"] = o.DataChangeCreatedBy
	}
	return json.Marshal(toSerialize)
}

type NullableFieldPut struct {
	value *FieldPut
	isSet bool
}

func (v NullableFieldPut) Get() *FieldPut {
	return v.value
}

func (v *NullableFieldPut) Set(val *FieldPut) {
	v.value = val
	v.isSet = true
}

func (v NullableFieldPut) IsSet() bool {
	return v.isSet
}

func (v *NullableFieldPut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFieldPut(val *FieldPut) *NullableFieldPut {
	return &NullableFieldPut{value: val, isSet: true}
}

func (v NullableFieldPut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFieldPut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
