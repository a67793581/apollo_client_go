/*
 * 阿波罗客户端
 *
 * 阿波罗客户端
 *
 * API version: v0.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppInfo struct for AppInfo
type AppInfo struct {
	Name                       *string `json:"name,omitempty"`
	AppId                      *string `json:"appId,omitempty"`
	OrgId                      *string `json:"orgId,omitempty"`
	OrgName                    *string `json:"orgName,omitempty"`
	OwnerName                  *string `json:"ownerName,omitempty"`
	OwnerEmail                 *string `json:"ownerEmail,omitempty"`
	DataChangeCreatedBy        *string `json:"dataChangeCreatedBy,omitempty"`
	DataChangeLastModifiedBy   *string `json:"dataChangeLastModifiedBy,omitempty"`
	DataChangeCreatedTime      *string `json:"dataChangeCreatedTime,omitempty"`
	DataChangeLastModifiedTime *string `json:"dataChangeLastModifiedTime,omitempty"`
}

// NewAppInfo instantiates a new AppInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppInfo() *AppInfo {
	this := AppInfo{}
	return &this
}

// NewAppInfoWithDefaults instantiates a new AppInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppInfoWithDefaults() *AppInfo {
	this := AppInfo{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppInfo) SetName(v string) {
	o.Name = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *AppInfo) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetAppIdOk() (*string, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *AppInfo) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *AppInfo) SetAppId(v string) {
	o.AppId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *AppInfo) GetOrgId() string {
	if o == nil || o.OrgId == nil {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetOrgIdOk() (*string, bool) {
	if o == nil || o.OrgId == nil {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *AppInfo) HasOrgId() bool {
	if o != nil && o.OrgId != nil {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *AppInfo) SetOrgId(v string) {
	o.OrgId = &v
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *AppInfo) GetOrgName() string {
	if o == nil || o.OrgName == nil {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetOrgNameOk() (*string, bool) {
	if o == nil || o.OrgName == nil {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *AppInfo) HasOrgName() bool {
	if o != nil && o.OrgName != nil {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *AppInfo) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *AppInfo) GetOwnerName() string {
	if o == nil || o.OwnerName == nil {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetOwnerNameOk() (*string, bool) {
	if o == nil || o.OwnerName == nil {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *AppInfo) HasOwnerName() bool {
	if o != nil && o.OwnerName != nil {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *AppInfo) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetOwnerEmail returns the OwnerEmail field value if set, zero value otherwise.
func (o *AppInfo) GetOwnerEmail() string {
	if o == nil || o.OwnerEmail == nil {
		var ret string
		return ret
	}
	return *o.OwnerEmail
}

// GetOwnerEmailOk returns a tuple with the OwnerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetOwnerEmailOk() (*string, bool) {
	if o == nil || o.OwnerEmail == nil {
		return nil, false
	}
	return o.OwnerEmail, true
}

// HasOwnerEmail returns a boolean if a field has been set.
func (o *AppInfo) HasOwnerEmail() bool {
	if o != nil && o.OwnerEmail != nil {
		return true
	}

	return false
}

// SetOwnerEmail gets a reference to the given string and assigns it to the OwnerEmail field.
func (o *AppInfo) SetOwnerEmail(v string) {
	o.OwnerEmail = &v
}

// GetDataChangeCreatedBy returns the DataChangeCreatedBy field value if set, zero value otherwise.
func (o *AppInfo) GetDataChangeCreatedBy() string {
	if o == nil || o.DataChangeCreatedBy == nil {
		var ret string
		return ret
	}
	return *o.DataChangeCreatedBy
}

// GetDataChangeCreatedByOk returns a tuple with the DataChangeCreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetDataChangeCreatedByOk() (*string, bool) {
	if o == nil || o.DataChangeCreatedBy == nil {
		return nil, false
	}
	return o.DataChangeCreatedBy, true
}

// HasDataChangeCreatedBy returns a boolean if a field has been set.
func (o *AppInfo) HasDataChangeCreatedBy() bool {
	if o != nil && o.DataChangeCreatedBy != nil {
		return true
	}

	return false
}

// SetDataChangeCreatedBy gets a reference to the given string and assigns it to the DataChangeCreatedBy field.
func (o *AppInfo) SetDataChangeCreatedBy(v string) {
	o.DataChangeCreatedBy = &v
}

// GetDataChangeLastModifiedBy returns the DataChangeLastModifiedBy field value if set, zero value otherwise.
func (o *AppInfo) GetDataChangeLastModifiedBy() string {
	if o == nil || o.DataChangeLastModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.DataChangeLastModifiedBy
}

// GetDataChangeLastModifiedByOk returns a tuple with the DataChangeLastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetDataChangeLastModifiedByOk() (*string, bool) {
	if o == nil || o.DataChangeLastModifiedBy == nil {
		return nil, false
	}
	return o.DataChangeLastModifiedBy, true
}

// HasDataChangeLastModifiedBy returns a boolean if a field has been set.
func (o *AppInfo) HasDataChangeLastModifiedBy() bool {
	if o != nil && o.DataChangeLastModifiedBy != nil {
		return true
	}

	return false
}

// SetDataChangeLastModifiedBy gets a reference to the given string and assigns it to the DataChangeLastModifiedBy field.
func (o *AppInfo) SetDataChangeLastModifiedBy(v string) {
	o.DataChangeLastModifiedBy = &v
}

// GetDataChangeCreatedTime returns the DataChangeCreatedTime field value if set, zero value otherwise.
func (o *AppInfo) GetDataChangeCreatedTime() string {
	if o == nil || o.DataChangeCreatedTime == nil {
		var ret string
		return ret
	}
	return *o.DataChangeCreatedTime
}

// GetDataChangeCreatedTimeOk returns a tuple with the DataChangeCreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetDataChangeCreatedTimeOk() (*string, bool) {
	if o == nil || o.DataChangeCreatedTime == nil {
		return nil, false
	}
	return o.DataChangeCreatedTime, true
}

// HasDataChangeCreatedTime returns a boolean if a field has been set.
func (o *AppInfo) HasDataChangeCreatedTime() bool {
	if o != nil && o.DataChangeCreatedTime != nil {
		return true
	}

	return false
}

// SetDataChangeCreatedTime gets a reference to the given string and assigns it to the DataChangeCreatedTime field.
func (o *AppInfo) SetDataChangeCreatedTime(v string) {
	o.DataChangeCreatedTime = &v
}

// GetDataChangeLastModifiedTime returns the DataChangeLastModifiedTime field value if set, zero value otherwise.
func (o *AppInfo) GetDataChangeLastModifiedTime() string {
	if o == nil || o.DataChangeLastModifiedTime == nil {
		var ret string
		return ret
	}
	return *o.DataChangeLastModifiedTime
}

// GetDataChangeLastModifiedTimeOk returns a tuple with the DataChangeLastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppInfo) GetDataChangeLastModifiedTimeOk() (*string, bool) {
	if o == nil || o.DataChangeLastModifiedTime == nil {
		return nil, false
	}
	return o.DataChangeLastModifiedTime, true
}

// HasDataChangeLastModifiedTime returns a boolean if a field has been set.
func (o *AppInfo) HasDataChangeLastModifiedTime() bool {
	if o != nil && o.DataChangeLastModifiedTime != nil {
		return true
	}

	return false
}

// SetDataChangeLastModifiedTime gets a reference to the given string and assigns it to the DataChangeLastModifiedTime field.
func (o *AppInfo) SetDataChangeLastModifiedTime(v string) {
	o.DataChangeLastModifiedTime = &v
}

func (o AppInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AppId != nil {
		toSerialize["appId"] = o.AppId
	}
	if o.OrgId != nil {
		toSerialize["orgId"] = o.OrgId
	}
	if o.OrgName != nil {
		toSerialize["orgName"] = o.OrgName
	}
	if o.OwnerName != nil {
		toSerialize["ownerName"] = o.OwnerName
	}
	if o.OwnerEmail != nil {
		toSerialize["ownerEmail"] = o.OwnerEmail
	}
	if o.DataChangeCreatedBy != nil {
		toSerialize["dataChangeCreatedBy"] = o.DataChangeCreatedBy
	}
	if o.DataChangeLastModifiedBy != nil {
		toSerialize["dataChangeLastModifiedBy"] = o.DataChangeLastModifiedBy
	}
	if o.DataChangeCreatedTime != nil {
		toSerialize["dataChangeCreatedTime"] = o.DataChangeCreatedTime
	}
	if o.DataChangeLastModifiedTime != nil {
		toSerialize["dataChangeLastModifiedTime"] = o.DataChangeLastModifiedTime
	}
	return json.Marshal(toSerialize)
}

type NullableAppInfo struct {
	value *AppInfo
	isSet bool
}

func (v NullableAppInfo) Get() *AppInfo {
	return v.value
}

func (v *NullableAppInfo) Set(val *AppInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAppInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAppInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppInfo(val *AppInfo) *NullableAppInfo {
	return &NullableAppInfo{value: val, isSet: true}
}

func (v NullableAppInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
