/*
 * 阿波罗客户端
 *
 * 阿波罗客户端
 *
 * API version: v0.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReleasesPost struct for ReleasesPost
type ReleasesPost struct {
	ReleaseTitle   *string `json:"releaseTitle,omitempty"`
	ReleaseComment *string `json:"releaseComment,omitempty"`
	ReleasedBy     *string `json:"releasedBy,omitempty"`
}

// NewReleasesPost instantiates a new ReleasesPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleasesPost() *ReleasesPost {
	this := ReleasesPost{}
	return &this
}

// NewReleasesPostWithDefaults instantiates a new ReleasesPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleasesPostWithDefaults() *ReleasesPost {
	this := ReleasesPost{}
	return &this
}

// GetReleaseTitle returns the ReleaseTitle field value if set, zero value otherwise.
func (o *ReleasesPost) GetReleaseTitle() string {
	if o == nil || o.ReleaseTitle == nil {
		var ret string
		return ret
	}
	return *o.ReleaseTitle
}

// GetReleaseTitleOk returns a tuple with the ReleaseTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleasesPost) GetReleaseTitleOk() (*string, bool) {
	if o == nil || o.ReleaseTitle == nil {
		return nil, false
	}
	return o.ReleaseTitle, true
}

// HasReleaseTitle returns a boolean if a field has been set.
func (o *ReleasesPost) HasReleaseTitle() bool {
	if o != nil && o.ReleaseTitle != nil {
		return true
	}

	return false
}

// SetReleaseTitle gets a reference to the given string and assigns it to the ReleaseTitle field.
func (o *ReleasesPost) SetReleaseTitle(v string) {
	o.ReleaseTitle = &v
}

// GetReleaseComment returns the ReleaseComment field value if set, zero value otherwise.
func (o *ReleasesPost) GetReleaseComment() string {
	if o == nil || o.ReleaseComment == nil {
		var ret string
		return ret
	}
	return *o.ReleaseComment
}

// GetReleaseCommentOk returns a tuple with the ReleaseComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleasesPost) GetReleaseCommentOk() (*string, bool) {
	if o == nil || o.ReleaseComment == nil {
		return nil, false
	}
	return o.ReleaseComment, true
}

// HasReleaseComment returns a boolean if a field has been set.
func (o *ReleasesPost) HasReleaseComment() bool {
	if o != nil && o.ReleaseComment != nil {
		return true
	}

	return false
}

// SetReleaseComment gets a reference to the given string and assigns it to the ReleaseComment field.
func (o *ReleasesPost) SetReleaseComment(v string) {
	o.ReleaseComment = &v
}

// GetReleasedBy returns the ReleasedBy field value if set, zero value otherwise.
func (o *ReleasesPost) GetReleasedBy() string {
	if o == nil || o.ReleasedBy == nil {
		var ret string
		return ret
	}
	return *o.ReleasedBy
}

// GetReleasedByOk returns a tuple with the ReleasedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleasesPost) GetReleasedByOk() (*string, bool) {
	if o == nil || o.ReleasedBy == nil {
		return nil, false
	}
	return o.ReleasedBy, true
}

// HasReleasedBy returns a boolean if a field has been set.
func (o *ReleasesPost) HasReleasedBy() bool {
	if o != nil && o.ReleasedBy != nil {
		return true
	}

	return false
}

// SetReleasedBy gets a reference to the given string and assigns it to the ReleasedBy field.
func (o *ReleasesPost) SetReleasedBy(v string) {
	o.ReleasedBy = &v
}

func (o ReleasesPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReleaseTitle != nil {
		toSerialize["releaseTitle"] = o.ReleaseTitle
	}
	if o.ReleaseComment != nil {
		toSerialize["releaseComment"] = o.ReleaseComment
	}
	if o.ReleasedBy != nil {
		toSerialize["releasedBy"] = o.ReleasedBy
	}
	return json.Marshal(toSerialize)
}

type NullableReleasesPost struct {
	value *ReleasesPost
	isSet bool
}

func (v NullableReleasesPost) Get() *ReleasesPost {
	return v.value
}

func (v *NullableReleasesPost) Set(val *ReleasesPost) {
	v.value = val
	v.isSet = true
}

func (v NullableReleasesPost) IsSet() bool {
	return v.isSet
}

func (v *NullableReleasesPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleasesPost(val *ReleasesPost) *NullableReleasesPost {
	return &NullableReleasesPost{value: val, isSet: true}
}

func (v NullableReleasesPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleasesPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
